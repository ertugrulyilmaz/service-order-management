plugins {
  id 'org.springframework.boot' version '2.1.3.RELEASE'
  id 'java'
  id 'jacoco'
  id "org.sonarqube" version "2.6.2"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"

group = 'com.eriks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
}

ext {
  set('springCloudVersion', 'Greenwich.RELEASE')
}

jar {
  enabled = true
}

bootJar {
  classifier = 'boot'
}

sonarqube {
  properties {
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.host.url", "http://localhost:9000"
    property "sonar.projectName", "Eriks - Service Order Management"
  }
}

dependencies {
  implementation('org.springframework.boot:spring-boot-starter-web') {
    exclude module: "spring-boot-starter-tomcat"
  }
  implementation 'org.springframework.boot:spring-boot-starter-jetty'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'

  implementation 'software.amazon.awssdk:kinesis:2.4.12'
  implementation 'software.amazon.kinesis:amazon-kinesis-client:2.1.2'

  runtimeOnly 'org.postgresql:postgresql:42.2.5'
  implementation 'com.zaxxer:HikariCP:3.2.0'
  implementation 'org.sql2o:sql2o:1.5.4'

  implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
  runtime 'io.jsonwebtoken:jjwt-impl:0.10.5', 'io.jsonwebtoken:jjwt-jackson:0.10.5'
  compileOnly 'org.projectlombok:lombok:1.18.4'
  annotationProcessor('org.projectlombok:lombok:1.18.4')

  implementation 'com.ecwid.consul:consul-api:1.3.0'

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
  testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
  testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
  testCompile "org.mockito:mockito-core:2.23.0"
  testCompile 'org.mockito:mockito-junit-jupiter:2.23.0'
  testCompile 'org.mockito:mockito-inline:2.8.9'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'ru.yandex.qatools.embed:postgresql-embedded:2.10'
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.destination file("${buildDir}/jacocoHtml")
  }
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'INSTRUCTION'
        value = 'COVEREDRATIO'
        minimum = 0.01
      }
    }
  }
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestCoverageVerification
}
